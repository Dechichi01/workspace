package com.pratica.util.persistence;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;

public abstract class Persist {
	
	public static <T extends Serializable> boolean gravar(T a, String arquivo ){
		try
		{
			File file = new File(arquivo);
			if (!file.exists())
			{
				file.createNewFile();
			}
			
			 FileOutputStream arquivoGrav = new FileOutputStream(file);

			 ObjectOutputStream objGravar = new ObjectOutputStream(arquivoGrav);

			 objGravar.writeObject(a);
			 objGravar.flush();
			 objGravar.close();
			 arquivoGrav.flush();
			 arquivoGrav.close();
			 return true;
		}
		catch(Exception e)
		{
			System.out.println("Erro: Não consegui salvar");
			 return false;
		}
	}
	
	 public static <T extends Serializable> Object recuperar(String arquivo)
	 {
		 Object obj = null;
		 FileInputStream arquivoLeitura = null;
		 ObjectInputStream objLeitura = null;
		 try
		 {
			 //Carrega o arquivo
			 arquivoLeitura = new FileInputStream(arquivo);
			 //Classe responsavel por recuperar os objetos do arquivo
			 objLeitura = new ObjectInputStream(arquivoLeitura);
			 //Le o objeto
			 obj = objLeitura.readObject();
			 objLeitura.close();
			 arquivoLeitura.close(); 
			 //observação.: não tem método flush()
		 }
		 catch( Exception e )
		 {
			 return null;
		 }
		 return obj;
	 }
}
